from flask import Flask, request, jsonify
import datetime

app = Flask(__name__)

# Cho ph√©p c√°c thi·∫øt b·ªã c√≥ ch·ª©a t·ª´ kh√≥a n√†y
VALID_KEYWORDS = {'qu·∫°t', 'ƒë√®n', 'm√°y l·∫°nh'}

def is_valid_device(device_name: str) -> bool:
    if not device_name:
        return False
    device_name = device_name.lower()
    return any(keyword in device_name for keyword in VALID_KEYWORDS)

@app.route('/control', methods=['POST'])
def control():
    data = request.json or {}

    timestamp = datetime.datetime.now().isoformat()
    device = data.get('device', '').strip()
    action = data.get('action')
    value = data.get('value')
    adjust = data.get('adjust')

    errors = []

    # Ki·ªÉm tra thi·∫øt b·ªã
    if not is_valid_device(device):
        errors.append(f"Thi·∫øt b·ªã kh√¥ng h·ª£p l·ªá: {device}")

    # Ki·ªÉm tra action/adjust h·ª£p l·ªá n·∫øu c√≥
    if action and action not in {"on", "off", "set"}:
        errors.append(f"Action kh√¥ng h·ª£p l·ªá: {action}")
    if adjust and adjust not in {"increase", "decrease"}:
        errors.append(f"ƒêi·ªÅu ch·ªânh kh√¥ng h·ª£p l·ªá: {adjust}")

    # Tr·∫£ l·ªói n·∫øu c√≥
    if errors:
        print("\n‚ùå L·ªánh b·ªã t·ª´ ch·ªëi:")
        for err in errors:
            print(" -", err)
        return jsonify({
            "status": "ERROR",
            "timestamp": timestamp,
            "errors": errors
        }), 400

    # In log h·ª£p l·ªá
    print("\n========== üì• L·ªánh IoT nh·∫≠n ƒë∆∞·ª£c ==========")
    print(f"[Time]     {timestamp}")
    print(f"[Device]   {device}")
    if action:
        print(f"[Action]   {action}")
    if adjust:
        print(f"[Adjust]   {adjust}")
    if value:
        print(f"[Value]    {value}")
    print("============================================")

    return jsonify({
        "status": "OK",
        "timestamp": timestamp,
        "device": device,
        "action": action,
        "adjust": adjust,
        "value": value
    })

if __name__ == '__main__':
    app.run(port=5000)
